import pandas as pd
import numpy as np

namedata='/Users/louisahillegaart/pythonProject1/Trip_data/trip_data_12.csv'

def load_and_preprocess_data(namedata, month):
    taxi_df = pd.read_csv(namedata, parse_dates=[5, 6])
    taxi_df.columns = taxi_df.columns.str.strip()
    taxi_df = taxi_df[(taxi_df['pickup_datetime'].dt.strftime('%Y-%m') == month) & (taxi_df['dropoff_datetime'].dt.strftime('%Y-%m') == month)]
    taxi_df['duration'] = (taxi_df['dropoff_datetime'] - taxi_df['pickup_datetime']).dt.total_seconds() / 60
    taxi_df = taxi_df[['medallion', 'pickup_datetime', 'dropoff_datetime', 'duration']]
    return taxi_df

def calculate_availability(df, month):
    unique_medallions = df['medallion'].unique()
    time_intervals = pd.date_range(f"{month}-01 00:00:00", f"{month}-31 23:59:00", freq='15min')
    availability_matrix = np.zeros((len(time_intervals) - 1, len(unique_medallions)), dtype=int)

    for idx, medallion in enumerate(unique_medallions):
        medallion_df = df[df['medallion'] == medallion]
        # Create the off_intervals DataFrame
        off_intervals = medallion_df[['dropoff_datetime']].rename(columns={'dropoff_datetime': 'start_offtime'})
        off_intervals['end_offtime'] = medallion_df['pickup_datetime'].shift(-1)
        off_intervals['duration'] = (off_intervals['end_offtime'] - off_intervals['start_offtime']).dt.total_seconds() / 60
        off_intervals = off_intervals[off_intervals['duration'] > 60]

        for i, row in off_intervals.iterrows():
            overlap = (time_intervals[:-1] < row['end_offtime']) & (time_intervals[1:] > row['start_offtime'])
            availability_matrix[overlap, idx] = 1
            #print(availability_matrix)
        #print(availability_matrix)
    availability_df = pd.DataFrame(availability_matrix, columns=unique_medallions, index=time_intervals[:-1])
    availability_df['total'] = availability_df.sum(axis=1)
    availability_df.reset_index(inplace=True)
    availability_df.rename(columns={'index': 'time_interval'}, inplace=True)
    return availability_df


month = '2013-12'
taxi_df = load_and_preprocess_data(namedata, month)
availability_df = calculate_availability(taxi_df, month)
print(availability_df.shape)
print(availability_df[['time_interval', 'total']])
availability_df[['time_interval', 'total']].to_csv('TotalNbofEvs_December.csv', index=False)
availability_df.to_csv('new_NbofEvs_December.csv', index=False)

